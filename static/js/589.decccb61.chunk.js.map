{"version":3,"file":"static/js/589.decccb61.chunk.js","mappings":"mPA8DA,UAlDqB,WACnB,IAAMA,GAAWC,EAAAA,EAAAA,MAajB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAACC,KAAK,QAAQC,GAAG,KAAKC,GAAG,KAAIC,UACrCL,EAAAA,EAAAA,KAACM,EAAAA,GAAG,CAACC,EAAE,IAAIC,UAAU,KAAKC,QAAQ,KAAKC,GAAG,QAAOL,UAC/CM,EAAAA,EAAAA,MAAA,QAAMC,SAfK,SAAAC,GACfA,EAAEC,iBACF,IAGMC,EAAW,CACfC,KAJWH,EAAEI,cAAcC,SAASC,SAASC,MAK7CC,MAJYR,EAAEI,cAAcC,SAASI,UAAUF,MAK/CG,SAJeV,EAAEI,cAAcC,SAASM,aAAaJ,OAMvDtB,GAAS2B,EAAAA,EAAAA,IAAgBV,GAC3B,EAI+BV,SAAA,EACvBM,EAAAA,EAAAA,MAACe,EAAAA,GAAW,CAACtB,GAAG,IAAGC,SAAA,EACjBL,EAAAA,EAAAA,KAAC2B,EAAAA,EAAS,CAAAtB,SAAC,UACXL,EAAAA,EAAAA,KAAC4B,EAAAA,EAAK,CAACC,KAAK,OAAOb,KAAK,WAAWc,YAAY,OAAOC,UAAQ,QAEhEpB,EAAAA,EAAAA,MAACe,EAAAA,GAAW,CAACtB,GAAG,IAAGC,SAAA,EACjBL,EAAAA,EAAAA,KAAC2B,EAAAA,EAAS,CAAAtB,SAAC,WACXL,EAAAA,EAAAA,KAAC4B,EAAAA,EAAK,CACJC,KAAK,QACLb,KAAK,YACLc,YAAY,sBACZC,UAAQ,QAGZpB,EAAAA,EAAAA,MAACe,EAAAA,GAAW,CAACtB,GAAG,IAAGC,SAAA,EACjBL,EAAAA,EAAAA,KAAC2B,EAAAA,EAAS,CAAAtB,SAAC,cACXL,EAAAA,EAAAA,KAAC4B,EAAAA,EAAK,CACJC,KAAK,WACLb,KAAK,eACLc,YAAY,WACZE,UAAW,EACXD,UAAQ,QAGZ/B,EAAAA,EAAAA,KAACiC,EAAAA,EAAM,CAACJ,KAAK,SAASK,YAAY,OAAM7B,SAAC,kBAOnD,C,2KC5BaJ,GAAYkC,EAAAA,EAAAA,IAAkC,SACzDC,EACAC,GAEA,OAA8CC,EAAAA,EAAAA,IAAiBF,GAAvDG,EAAAA,EAAAA,UAAWC,EAAAA,EAAAA,cAAkBC,GAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAE/BC,GAASC,EAAAA,EAAAA,IAAe,YAAaP,GAE3C,OACE,SAACQ,EAAAA,EAAAA,KAAUC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAAA,CACTR,IAAAA,EACAE,WAAWO,EAAAA,EAAAA,IAAG,mBAAoBP,IAC9BE,GAAAA,CAAAA,EAAAA,CACJM,OAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAAA,CAAAA,EACKL,GACCF,GAAiB,CACnBQ,QAAS,OACTC,cAAe,SACfC,WAAY,aAKtB,IAEAjD,EAAUkD,YAAc,W","sources":["pages/RegisterPage/RegisterPage.jsx","../node_modules/@chakra-ui/layout/src/container.tsx"],"sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  Box,\n  Button,\n  FormControl,\n  FormLabel,\n  Input,\n  Container,\n} from '@chakra-ui/react';\nimport { apiRegisterUser } from 'redux-state/auth/authOperations';\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n  const onSubmit = e => {\n    e.preventDefault();\n    const name = e.currentTarget.elements.userName.value;\n    const email = e.currentTarget.elements.userEmail.value;\n    const password = e.currentTarget.elements.userPassword.value;\n    const formData = {\n      name,\n      email,\n      password,\n    };\n    dispatch(apiRegisterUser(formData));\n  };\n  return (\n    <Container maxW=\"400px\" mt=\"15\" mb=\"20\">\n      <Box p=\"6\" boxShadow=\"lg\" rounded=\"md\" bg=\"white\">\n        <form onSubmit={onSubmit}>\n          <FormControl mb=\"4\">\n            <FormLabel>Name</FormLabel>\n            <Input type=\"text\" name=\"userName\" placeholder=\"Ivan\" required />\n          </FormControl>\n          <FormControl mb=\"4\">\n            <FormLabel>Email</FormLabel>\n            <Input\n              type=\"email\"\n              name=\"userEmail\"\n              placeholder=\"Ivan777@example.com\"\n              required\n            />\n          </FormControl>\n          <FormControl mb=\"4\">\n            <FormLabel>Password</FormLabel>\n            <Input\n              type=\"password\"\n              name=\"userPassword\"\n              placeholder=\"********\"\n              minLength={4}\n              required\n            />\n          </FormControl>\n          <Button type=\"submit\" colorScheme=\"teal\">\n            Sign Up\n          </Button>\n        </form>\n      </Box>\n    </Container>\n  );\n};\n\nexport default RegisterPage;\n","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface ContainerProps\n  extends HTMLChakraProps<\"div\">,\n    ThemingProps<\"Container\"> {\n  /**\n   * If `true`, container will center its children\n   * regardless of their width.\n   *\n   * @default false\n   */\n  centerContent?: boolean\n}\n\n/**\n * Layout component used to wrap app or website content\n *\n * It sets `margin-left` and `margin-right` to `auto`,\n * to keep its content centered.\n *\n * It also sets a default max-width of `60ch` (60 characters).\n *\n * @see Docs https://chakra-ui.com/docs/components/container\n */\nexport const Container = forwardRef<ContainerProps, \"div\">(function Container(\n  props,\n  ref,\n) {\n  const { className, centerContent, ...rest } = omitThemingProps(props)\n\n  const styles = useStyleConfig(\"Container\", props)\n\n  return (\n    <chakra.div\n      ref={ref}\n      className={cx(\"chakra-container\", className)}\n      {...rest}\n      __css={{\n        ...styles,\n        ...(centerContent && {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }),\n      }}\n    />\n  )\n})\n\nContainer.displayName = \"Container\"\n"],"names":["dispatch","useDispatch","_jsx","Container","maxW","mt","mb","children","Box","p","boxShadow","rounded","bg","_jsxs","onSubmit","e","preventDefault","formData","name","currentTarget","elements","userName","value","email","userEmail","password","userPassword","apiRegisterUser","FormControl","FormLabel","Input","type","placeholder","required","minLength","Button","colorScheme","forwardRef","props","ref","omitThemingProps","className","centerContent","rest","styles","useStyleConfig","chakra","div","cx","__css","display","flexDirection","alignItems","displayName"],"sourceRoot":""}